{"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/models/OpenAPI.ts":{"path":"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/models/OpenAPI.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":105}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":68}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":39}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":37}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":37}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":39}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":35}},"9":{"start":{"line":14,"column":0},"end":{"line":24,"column":86}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":41}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":41}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":41}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":43}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":47}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":39}},"16":{"start":{"line":21,"column":4},"end":{"line":21,"column":43}},"17":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"18":{"start":{"line":23,"column":4},"end":{"line":23,"column":48}},"19":{"start":{"line":25,"column":0},"end":{"line":44,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":24},"end":{"line":12,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":1},"end":{"line":14,"column":2}},"loc":{"start":{"line":14,"column":30},"end":{"line":24,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":66}},"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":36}},{"start":{"line":12,"column":41},"end":{"line":12,"column":65}}],"line":12},"1":{"loc":{"start":{"line":24,"column":23},"end":{"line":24,"column":84}},"type":"binary-expr","locations":[{"start":{"line":24,"column":23},"end":{"line":24,"column":48}},{"start":{"line":24,"column":53},"end":{"line":24,"column":83}}],"line":24}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"f":{"0":1,"1":1},"b":{"0":[1,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/models/OpenAPI.ts","sources":["/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/models/OpenAPI.ts"],"names":[],"mappings":";;;AACA,IAAY,WAOX;AAPD,WAAY,WAAW;IACrB,kCAAmB,CAAA;IACnB,gCAAiB,CAAA;IACjB,gCAAiB,CAAA;IACjB,kCAAmB,CAAA;IACnB,gCAAiB,CAAA;IACjB,8BAAe,CAAA;AACjB,CAAC,EAPW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAOtB;AAED,IAAY,iBAUX;AAVD,WAAY,iBAAiB;IAC3B,oCAAe,CAAA;IACf,oCAAe,CAAA;IACf,oCAAe,CAAA;IACf,sCAAiB,CAAA;IACjB,0CAAqB,CAAA;IACrB,kCAAa,CAAA;IACb,sCAAiB,CAAA;IACjB,kCAAa,CAAA;IACb,2CAAsB,CAAA;AACxB,CAAC,EAVW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAU5B;AAEY,QAAA,qCAAqC,GAAkD;IAClG,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE;IACxB,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,EAAE;IACvB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE;IACzB,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE;QACrB,iBAAiB,CAAC,KAAK;QACvB,iBAAiB,CAAC,KAAK;KACxB;IACD,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;QACpB,iBAAiB,CAAC,MAAM;QACxB,iBAAiB,CAAC,KAAK;KACxB;IACD,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;QACpB,iBAAiB,CAAC,QAAQ;QAC1B,iBAAiB,CAAC,MAAM;QACxB,iBAAiB,CAAC,IAAI;QACtB,iBAAiB,CAAC,IAAI;QACtB,iBAAiB,CAAC,QAAQ;KAC3B;CACF,CAAC","sourcesContent":["\nexport enum OpenApiType {\n  Integer = 'integer',\n  Number = 'number',\n  String = 'string',\n  boolean = 'boolean',\n  Object = 'object',\n  Array = 'array',\n}\n\nexport enum OpenApiTypeFormat {\n  Int32 = 'int32',\n  Int64 = 'int64',\n  Float = 'float',\n  Double = 'double',\n  Password = 'password',\n  Byte = 'byte',\n  Binary = 'binary',\n  Date = 'date',\n  DateTime = 'date-time',\n}\n\nexport const ValidOpenApiTypeFormatsForOpenApiType: Record<OpenApiType, Array<OpenApiTypeFormat>> = {\n  [OpenApiType.Object]: [],\n  [OpenApiType.Array]: [],\n  [OpenApiType.boolean]: [],\n  [OpenApiType.Integer]: [\n    OpenApiTypeFormat.Int32,\n    OpenApiTypeFormat.Int64\n  ],\n  [OpenApiType.Number]: [\n    OpenApiTypeFormat.Double,\n    OpenApiTypeFormat.Float\n  ],\n  [OpenApiType.String]: [\n    OpenApiTypeFormat.Password,\n    OpenApiTypeFormat.Binary,\n    OpenApiTypeFormat.Byte,\n    OpenApiTypeFormat.Date,\n    OpenApiTypeFormat.DateTime,\n  ],\n};\n\n// CORRECT FOR V3.0.0\nexport interface OpenAPIContact {\n  name?: string;\n  url?: string;\n  email?: string;\n}\n\n// CORRECT FOR V3.0.0\nexport interface OpenAPILicense {\n  name: string;\n  url?: string;\n}\n\n// CORRECT FOR V3.0.0\nexport interface OpenAPIInfo {\n  title: string;\n  description?: string;\n  termsOfService?: string;\n  contact?: OpenAPIContact;\n  license?: OpenAPILicense;\n  version?: string;\n}\n\n// CORRECT FOR V3.0.0\nexport interface OpenApiServerVariable {\n  enum?: Array<string>;\n  default: string;\n  description?: string;\n}\n\n// CORRECT FOR V3.0.0\nexport interface OpenApiServer {\n  url: string;\n  description?: string;\n  variables?: Record<string, OpenApiServerVariable>;\n}\n\nexport interface OpenApiParameter {\n  name: string;\n  in: 'query' | 'header' | 'path' | 'cookie';\n  description?: string;\n  required: boolean;\n  deprecated?: boolean;\n  allowEmptyValue?: boolean;\n}\n\nexport interface OpenApiReference {\n  $ref: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OpenApiOperation {}\n\n// CORRECT FOR V3.0.0\nexport interface OpenApiTag {\n  name: string,\n  description?: string,\n  externalDocs?: OpenApiExternalDocs\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OpenApiSecurity {}\n\nexport interface OpenApiProperty {\n  type: OpenApiType,\n  format: OpenApiTypeFormat,\n  example: any,\n  enum: Array<any>\n}\n\nexport interface OpenApiSchema {\n  type: OpenApiType.Object,\n  properties: Record<string, OpenApiProperty>\n}\n\nexport interface OpenApiComponents {\n  schemas: Record<string, OpenApiSchema | OpenApiReference>\n}\n\nexport interface OpenApiPathsObject {\n  [x: string]: OpenApiPath | OpenApiPathsObject\n}\n\nexport interface OpenApiPath {\n  $ref?: string;\n  summary?: string;\n  description?: string;\n  servers?: Array<OpenApiServer>;\n  parameters?: Array<OpenApiParameter | OpenApiReference>;\n}\n\n// CORRECT FOR V3.0.0\nexport interface OpenApiExternalDocs {\n  description?: string,\n  url: string\n}\n\nexport interface OpenAPISpec {\n  openapi: string; // DONE\n  info: OpenAPIInfo; // DONE\n  servers?: Array<OpenApiServer>; // DONE\n  paths: Record<string, OpenApiPathsObject>;\n  components?: OpenApiComponents;\n  security?: Array<OpenApiSecurity>; // NEED TO WORK ON\n  tags?: Array<OpenApiTag>; // DONE\n  externalDocs?: OpenApiExternalDocs; // DONE\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3fd404f55066f214796078186a4b9ae5678647b5","contentHash":"bb72d1e5dc07bc25c616d4ab31408683b8089d8ee2bb760565db6936dabcb914"},"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/utils/index.ts":{"path":"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/utils/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":279}},"4":{"start":{"line":7,"column":13},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":18},"end":{"line":9,"column":46}},"7":{"start":{"line":10,"column":34},"end":{"line":43,"column":1}},"8":{"start":{"line":11,"column":28},"end":{"line":16,"column":5}},"9":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":25}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"12":{"start":{"line":17,"column":4},"end":{"line":42,"column":5}},"13":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"14":{"start":{"line":20,"column":16},"end":{"line":20,"column":81}},"15":{"start":{"line":22,"column":12},"end":{"line":22,"column":84}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":65}},"17":{"start":{"line":36,"column":31},"end":{"line":38,"column":13}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":169}},"19":{"start":{"line":39,"column":72},"end":{"line":39,"column":164}},"20":{"start":{"line":41,"column":12},"end":{"line":41,"column":77}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":62}},"22":{"start":{"line":45,"column":25},"end":{"line":59,"column":1}},"23":{"start":{"line":46,"column":20},"end":{"line":46,"column":35}},"24":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":29}},"26":{"start":{"line":50,"column":16},"end":{"line":50,"column":19}},"27":{"start":{"line":51,"column":4},"end":{"line":57,"column":5}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":34}},"29":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"30":{"start":{"line":54,"column":12},"end":{"line":54,"column":57}},"31":{"start":{"line":56,"column":8},"end":{"line":56,"column":29}},"32":{"start":{"line":58,"column":4},"end":{"line":58,"column":17}},"33":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"34":{"start":{"line":61,"column":27},"end":{"line":82,"column":1}},"35":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"36":{"start":{"line":63,"column":8},"end":{"line":63,"column":27}},"37":{"start":{"line":65,"column":17},"end":{"line":65,"column":41}},"38":{"start":{"line":66,"column":4},"end":{"line":80,"column":5}},"39":{"start":{"line":66,"column":17},"end":{"line":66,"column":18}},"40":{"start":{"line":67,"column":20},"end":{"line":67,"column":27}},"41":{"start":{"line":68,"column":8},"end":{"line":79,"column":9}},"42":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"43":{"start":{"line":70,"column":16},"end":{"line":75,"column":17}},"44":{"start":{"line":71,"column":20},"end":{"line":71,"column":98}},"45":{"start":{"line":74,"column":20},"end":{"line":74,"column":63}},"46":{"start":{"line":76,"column":16},"end":{"line":76,"column":25}},"47":{"start":{"line":78,"column":12},"end":{"line":78,"column":87}},"48":{"start":{"line":81,"column":4},"end":{"line":81,"column":23}},"49":{"start":{"line":83,"column":0},"end":{"line":83,"column":48}},"50":{"start":{"line":84,"column":28},"end":{"line":97,"column":1}},"51":{"start":{"line":85,"column":18},"end":{"line":92,"column":11}},"52":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"53":{"start":{"line":94,"column":8},"end":{"line":94,"column":49}},"54":{"start":{"line":96,"column":4},"end":{"line":96,"column":17}},"55":{"start":{"line":98,"column":0},"end":{"line":98,"column":50}},"56":{"start":{"line":99,"column":0},"end":{"line":111,"column":5}},"57":{"start":{"line":100,"column":23},"end":{"line":100,"column":25}},"58":{"start":{"line":101,"column":4},"end":{"line":110,"column":6}},"59":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"60":{"start":{"line":103,"column":12},"end":{"line":103,"column":40}},"61":{"start":{"line":105,"column":21},"end":{"line":105,"column":85}},"62":{"start":{"line":106,"column":8},"end":{"line":106,"column":75}},"63":{"start":{"line":107,"column":8},"end":{"line":109,"column":10}},"64":{"start":{"line":108,"column":12},"end":{"line":108,"column":89}},"65":{"start":{"line":112,"column":25},"end":{"line":126,"column":1}},"66":{"start":{"line":118,"column":4},"end":{"line":118,"column":51}},"67":{"start":{"line":119,"column":4},"end":{"line":119,"column":50}},"68":{"start":{"line":120,"column":4},"end":{"line":120,"column":50}},"69":{"start":{"line":121,"column":4},"end":{"line":121,"column":52}},"70":{"start":{"line":122,"column":4},"end":{"line":122,"column":52}},"71":{"start":{"line":123,"column":4},"end":{"line":123,"column":52}},"72":{"start":{"line":124,"column":4},"end":{"line":124,"column":52}},"73":{"start":{"line":125,"column":4},"end":{"line":125,"column":22}},"74":{"start":{"line":127,"column":0},"end":{"line":127,"column":44}},"75":{"start":{"line":128,"column":30},"end":{"line":146,"column":1}},"76":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"77":{"start":{"line":130,"column":8},"end":{"line":130,"column":19}},"78":{"start":{"line":132,"column":14},"end":{"line":132,"column":18}},"79":{"start":{"line":133,"column":31},"end":{"line":133,"column":35}},"80":{"start":{"line":134,"column":4},"end":{"line":144,"column":5}},"81":{"start":{"line":134,"column":17},"end":{"line":134,"column":18}},"82":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"83":{"start":{"line":136,"column":12},"end":{"line":136,"column":21}},"84":{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},"85":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"86":{"start":{"line":140,"column":12},"end":{"line":140,"column":41}},"87":{"start":{"line":141,"column":12},"end":{"line":141,"column":21}},"88":{"start":{"line":143,"column":8},"end":{"line":143,"column":22}},"89":{"start":{"line":145,"column":4},"end":{"line":145,"column":15}},"90":{"start":{"line":147,"column":0},"end":{"line":147,"column":54}},"91":{"start":{"line":148,"column":26},"end":{"line":159,"column":1}},"92":{"start":{"line":149,"column":30},"end":{"line":149,"column":45}},"93":{"start":{"line":150,"column":21},"end":{"line":150,"column":54}},"94":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"95":{"start":{"line":152,"column":8},"end":{"line":152,"column":19}},"96":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"97":{"start":{"line":155,"column":8},"end":{"line":155,"column":27}},"98":{"start":{"line":157,"column":4},"end":{"line":157,"column":85}},"99":{"start":{"line":158,"column":4},"end":{"line":158,"column":15}},"100":{"start":{"line":160,"column":0},"end":{"line":160,"column":46}},"101":{"start":{"line":161,"column":21},"end":{"line":170,"column":1}},"102":{"start":{"line":162,"column":31},"end":{"line":162,"column":47}},"103":{"start":{"line":163,"column":4},"end":{"line":168,"column":5}},"104":{"start":{"line":164,"column":8},"end":{"line":164,"column":54}},"105":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"106":{"start":{"line":166,"column":12},"end":{"line":166,"column":53}},"107":{"start":{"line":169,"column":4},"end":{"line":169,"column":39}},"108":{"start":{"line":171,"column":0},"end":{"line":171,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":34},"end":{"line":10,"column":35}},"loc":{"start":{"line":10,"column":46},"end":{"line":43,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":28},"end":{"line":11,"column":29}},"loc":{"start":{"line":11,"column":37},"end":{"line":16,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":54},"end":{"line":39,"column":55}},"loc":{"start":{"line":39,"column":72},"end":{"line":39,"column":164}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":25},"end":{"line":45,"column":26}},"loc":{"start":{"line":45,"column":40},"end":{"line":59,"column":1}},"line":45},"5":{"name":"(anonymous_5)","decl":{"start":{"line":61,"column":27},"end":{"line":61,"column":28}},"loc":{"start":{"line":61,"column":50},"end":{"line":82,"column":1}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":84,"column":28},"end":{"line":84,"column":29}},"loc":{"start":{"line":84,"column":38},"end":{"line":97,"column":1}},"line":84},"7":{"name":"(anonymous_7)","decl":{"start":{"line":99,"column":41},"end":{"line":99,"column":42}},"loc":{"start":{"line":99,"column":47},"end":{"line":111,"column":1}},"line":99},"8":{"name":"(anonymous_8)","decl":{"start":{"line":101,"column":11},"end":{"line":101,"column":12}},"loc":{"start":{"line":101,"column":40},"end":{"line":110,"column":5}},"line":101},"9":{"name":"(anonymous_9)","decl":{"start":{"line":107,"column":15},"end":{"line":107,"column":16}},"loc":{"start":{"line":107,"column":37},"end":{"line":109,"column":9}},"line":107},"10":{"name":"(anonymous_10)","decl":{"start":{"line":112,"column":25},"end":{"line":112,"column":26}},"loc":{"start":{"line":112,"column":41},"end":{"line":126,"column":1}},"line":112},"11":{"name":"(anonymous_11)","decl":{"start":{"line":128,"column":30},"end":{"line":128,"column":31}},"loc":{"start":{"line":128,"column":39},"end":{"line":146,"column":1}},"line":128},"12":{"name":"(anonymous_12)","decl":{"start":{"line":148,"column":26},"end":{"line":148,"column":27}},"loc":{"start":{"line":148,"column":47},"end":{"line":159,"column":1}},"line":148},"13":{"name":"(anonymous_13)","decl":{"start":{"line":161,"column":21},"end":{"line":161,"column":22}},"loc":{"start":{"line":161,"column":50},"end":{"line":170,"column":1}},"line":161}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"4":{"loc":{"start":{"line":17,"column":4},"end":{"line":42,"column":5}},"type":"switch","locations":[{"start":{"line":18,"column":8},"end":{"line":22,"column":84}},{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},{"start":{"line":24,"column":8},"end":{"line":24,"column":42}},{"start":{"line":25,"column":8},"end":{"line":25,"column":43}},{"start":{"line":26,"column":8},"end":{"line":27,"column":65}},{"start":{"line":28,"column":8},"end":{"line":39,"column":169}},{"start":{"line":40,"column":8},"end":{"line":41,"column":77}}],"line":17},"5":{"loc":{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},"type":"if","locations":[{"start":{"line":19,"column":12},"end":{"line":21,"column":13}},{"start":{"line":19,"column":12},"end":{"line":21,"column":13}}],"line":19},"6":{"loc":{"start":{"line":39,"column":81},"end":{"line":39,"column":112}},"type":"cond-expr","locations":[{"start":{"line":39,"column":104},"end":{"line":39,"column":106}},{"start":{"line":39,"column":109},"end":{"line":39,"column":112}}],"line":39},"7":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},{"start":{"line":47,"column":4},"end":{"line":49,"column":5}}],"line":47},"8":{"loc":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},{"start":{"line":53,"column":8},"end":{"line":55,"column":9}}],"line":53},"9":{"loc":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},{"start":{"line":62,"column":4},"end":{"line":64,"column":5}}],"line":62},"10":{"loc":{"start":{"line":68,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":79,"column":9}},{"start":{"line":68,"column":8},"end":{"line":79,"column":9}}],"line":68},"11":{"loc":{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":77,"column":13}},{"start":{"line":69,"column":12},"end":{"line":77,"column":13}}],"line":69},"12":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{"line":93,"column":4},"end":{"line":95,"column":5}}],"line":93},"13":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{"line":102,"column":8},"end":{"line":104,"column":9}}],"line":102},"14":{"loc":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},{"start":{"line":129,"column":4},"end":{"line":131,"column":5}}],"line":129},"15":{"loc":{"start":{"line":129,"column":8},"end":{"line":129,"column":48}},"type":"binary-expr","locations":[{"start":{"line":129,"column":8},"end":{"line":129,"column":26}},{"start":{"line":129,"column":30},"end":{"line":129,"column":48}}],"line":129},"16":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"17":{"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":44}},"type":"binary-expr","locations":[{"start":{"line":135,"column":12},"end":{"line":135,"column":26}},{"start":{"line":135,"column":30},"end":{"line":135,"column":44}}],"line":135},"18":{"loc":{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":138,"column":8},"end":{"line":142,"column":9}},{"start":{"line":138,"column":8},"end":{"line":142,"column":9}}],"line":138},"19":{"loc":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},{"start":{"line":151,"column":4},"end":{"line":153,"column":5}}],"line":151},"20":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{"line":154,"column":4},"end":{"line":156,"column":5}}],"line":154},"21":{"loc":{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":167,"column":9}},{"start":{"line":165,"column":8},"end":{"line":167,"column":9}}],"line":165}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":15,"9":10,"10":4,"11":6,"12":15,"13":3,"14":1,"15":2,"16":8,"17":3,"18":3,"19":10,"20":1,"21":1,"22":1,"23":6,"24":6,"25":6,"26":6,"27":6,"28":13,"29":13,"30":2,"31":11,"32":4,"33":1,"34":1,"35":9,"36":3,"37":9,"38":9,"39":9,"40":16,"41":16,"42":10,"43":4,"44":4,"45":1,"46":3,"47":6,"48":7,"49":1,"50":1,"51":15,"52":15,"53":1,"54":14,"55":1,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1,"76":4,"77":1,"78":3,"79":3,"80":3,"81":3,"82":28,"83":4,"84":24,"85":3,"86":3,"87":3,"88":21,"89":3,"90":1,"91":1,"92":5,"93":5,"94":5,"95":1,"96":4,"97":4,"98":4,"99":4,"100":1,"101":1,"102":2,"103":2,"104":6,"105":6,"106":1,"107":1,"108":1},"f":{"0":2,"1":15,"2":10,"3":10,"4":6,"5":9,"6":15,"7":1,"8":0,"9":0,"10":0,"11":4,"12":5,"13":2},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[4,6],"4":[3,3,3,3,8,3,1],"5":[1,2],"6":[2,8],"7":[6,0],"8":[2,11],"9":[3,6],"10":[10,6],"11":[4,6],"12":[1,14],"13":[0,0],"14":[1,3],"15":[4,2],"16":[4,24],"17":[28,26],"18":[3,21],"19":[1,4],"20":[4,0],"21":[1,5]},"inputSourceMap":{"version":3,"file":"/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/utils/index.ts","sources":["/Users/morganb/Documents/Development/com.booment.client-lib-generator/src/utils/index.ts"],"names":[],"mappings":"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","sourcesContent":["import fs from 'fs';\n\nimport Handlebars from 'handlebars';\n\nimport { OpenApiType } from '../models/OpenAPI';\n\nexport interface Schema {\n  type: OpenApiType;\n  properties?: Schema;\n  required?: Array<string>;\n  items?: Schema;\n  additionalProperties?: Schema;\n}\nexport const buildTypeObjectFromSchema = (schema: Schema): string => {\n  const isParamRequired = (key: string): boolean => {\n    if (!schema.required) {\n      return false;\n    }\n    return schema.required.includes(key);\n  };\n\n  switch (schema.type) {\n    case OpenApiType.Array:\n      if (!schema.items) {\n        throw new Error('Schema type array must have an items property');\n      }\n      return `Array<${buildTypeObjectFromSchema(schema.items)}>`;\n    case OpenApiType.Integer:\n    case OpenApiType.Number:\n    case OpenApiType.boolean:\n    case OpenApiType.String:\n      return openApiTypeToTSType(schema.type);\n    case OpenApiType.Object:\n      /*\n       * Put this back, but for now it isn't right\n       * if (!schema.properties && !schema.additionalProperties) {\n       *   throw new Error(`Schema type object must have a properties property`);\n       * }\n       */\n      // eslint-disable-next-line no-case-declarations\n      const properties = {\n        ...schema.properties,\n      };\n      return `{${Object.entries(properties).map(\n        ([key, value]) =>\n          `${key}${\n            isParamRequired(key) ? '' : '?'\n          }: ${buildTypeObjectFromSchema(value as Schema)}`,\n      )}}`;\n    default:\n      throw new Error(`Encountered unrecognized type: ${schema.type}`);\n  }\n};\n\nexport const followObjectPath = (\n  path: string,\n  obj: Record<string, any>,\n): Record<string, any> => {\n  const pathArr = path.split('/');\n  if (pathArr[0] === '#') {\n    pathArr.splice(0, 1);\n  }\n\n  let found = obj;\n  while (pathArr.length) {\n    found = found[pathArr[0]];\n    if (found === undefined) {\n      throw new Error('Path not valid for object');\n    }\n    pathArr.splice(0, 1);\n  }\n\n  return found;\n};\n\nexport const expandRefsOnObject = (\n  currentRoot: Record<string, any>,\n  base?: Record<string, any>,\n): Record<string, any> => {\n  if (!base) {\n    base = currentRoot;\n  }\n\n  const keys = Object.keys(currentRoot);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (typeof currentRoot[key] === 'object') {\n      if (currentRoot[key].$ref) {\n        try {\n          currentRoot[key] = followObjectPath(currentRoot[key].$ref, base);\n        } catch (err) {\n          throw new Error('Ref not found on object');\n        }\n        continue;\n      }\n      currentRoot[key] = expandRefsOnObject(currentRoot[key], base);\n    }\n  }\n\n  return currentRoot;\n};\n\nexport const openApiTypeToTSType = (type: OpenApiType): string => {\n  const found = {\n    [OpenApiType.Array]: 'array',\n    [OpenApiType.Integer]: 'number',\n    [OpenApiType.Number]: 'number',\n    [OpenApiType.Object]: 'object',\n    [OpenApiType.String]: 'string',\n    [OpenApiType.boolean]: 'boolean',\n  }[type];\n\n  if (!found) {\n    throw new Error('Invalid type supplied');\n  }\n\n  return found;\n};\n\nexport const useHandlebarsTemplateFromFile = (() => {\n  const generators: Record<string, HandlebarsTemplateDelegate<any>> = {};\n\n  return async (filePath: string, options?: CompileOptions) => {\n    if (generators[filePath]) {\n      return generators[filePath];\n    }\n\n    const file = await fs.readFileSync(filePath, { encoding: 'utf-8' });\n    generators[filePath] = Handlebars.compile(file, options);\n    return (context: any, options?: Handlebars.RuntimeOptions | undefined) => {\n      return makeStringUnsafe(generators[filePath](context, options))\n    };\n  };\n})();\n\nexport const makeStringUnsafe = (safeString: string): string => {\n  /*\n   * Make string unsafe? wtf?\n   * This exists cause handlebars is meant for html templating. In that situation,\n   * it would be an incredibly bad idea to do this. We are not doing html templating though.\n   */\n  safeString = safeString.replace(/&amp;/g, '&');\n  safeString = safeString.replace(/&lt;/g, '<');\n  safeString = safeString.replace(/&gt;/g, '>');\n  safeString = safeString.replace(/&quot;/g, '\"');\n  safeString = safeString.replace(/&#x27;/g, \"'\");\n  safeString = safeString.replace(/&#x60;/g, '`');\n  safeString = safeString.replace(/&#x3D;/g, '=');\n\n  return safeString;\n};\n\nexport const paramKeyToSemanticKey = (key: string) => {\n  if (!key.includes('{') && !key.includes('}')) {\n    return key;\n  }\n\n  let out = 'by';\n  let shouldCapitalizeNext = true;\n\n  for (let i = 0; i < key.length; i ++) {\n    if (key[i] === '{' || key[i] === '}') {\n      continue;\n    }\n\n    if (shouldCapitalizeNext) {\n      out += key[i].toUpperCase();\n      shouldCapitalizeNext = false;\n      continue;\n    }\n\n    out += key[i];\n  }\n\n  return out;\n};\n\nexport const buildNestedObject = (pathToNest: Array<string>, obj: Record<string, any>): Record<string, any> => {\n  const workingPathToNest = [...pathToNest];\n  const firstKey = workingPathToNest.splice(0, 1)[0];\n\n  if (!firstKey) {\n    return obj;\n  }\n\n  if (!obj[firstKey]) {\n    obj[firstKey] = {};\n  }\n\n  obj[firstKey] = buildNestedObject(workingPathToNest, obj[firstKey]);\n  return obj;\n};\n\nexport const setDeepParam = <T>(obj: Record<string, any>, pathToParam: Array<string>, value: T) => {\n  const workingPathToParam = [...pathToParam];\n\n  while (workingPathToParam.length > 1) {\n    obj = obj[workingPathToParam.splice(0, 1)[0]];\n    if (!obj) {\n      throw new Error('Invalid path to param');\n    }\n  }\n\n  obj[workingPathToParam[0]] = value;\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f3362e260e0368c136838e6eec4d1a8b0e559b46","contentHash":"62ba1fb985466dff878c21508c606d82e59d1fb013325a5631832a428fa69df5"}}